<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LibraryTests</name>
    </assembly>
    <members>
        <member name="T:LibraryTests.Domain.AttackTest">
            <summary>
            Clase de pruebas unitarias para validar el comportamiento de la clase <see cref="T:Library.Attack"/>.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.ObtainAttack_ShouldReturnCorrectData">
            <summary>
            Verifica que el método <see cref="M:Library.Attack.ObtainAttack(System.String)"/> retorne los datos correctos 
            para un ataque existente.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.ObtainAttack_NonExistent_ShouldReturnPredeterminedData">
            <summary>
            Verifica que el método <see cref="M:Library.Attack.ObtainAttack(System.String)"/> retorne datos predeterminados 
            cuando se solicita un ataque que no existe.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.CalculeDamage_WithCritical_ShouldIncreaseDamage">
            <summary>
            Verifica que el método <see cref="M:Library.Attack.CalculeDamage(System.String,Library.Pokemon,Library.EffectsManager)"/> 
            calcule correctamente el daño de un ataque, teniendo en cuenta un golpe crítico.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.TestSelectSpecialEffect">
            <summary>
            Verifica que el método <see cref="M:Library.Attack.SelectSpecialEffect"/> retorne un efecto especial válido.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.TestCritucal">
            <summary>
            Verifica que el atributo <see cref="M:Library.Attack.Critical"/> no sea nulo.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.AttackTest.TestApplySpecialEffect">
            <summary>
            Verifica que el método <see cref="M:Library.Attack.ApplySpecialEffect"/> no sea nulo.
            </summary>
        </member>
        <member name="T:LibraryTests.Domain.BattlesListTest">
            <summary>
            Clase de pruebas unitarias para validar el comportamiento de la clase <see cref="T:Ucu.Poo.DiscordBot.Domain.BattlesList"/>.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.BattlesListTest.AgregarLista">
            <summary>
            Verifica que el método <see cref="M:Ucu.Poo.DiscordBot.Domain.BattlesList.AddBattle(Library.Trainer,Library.Trainer)"/> agregue correctamente 
            una nueva batalla a la lista de batallas.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.BattlesListTest.BuscarEntrenadorPorDisplayName">
            <summary>
            Verifica que el método <see cref="M:Ucu.Poo.DiscordBot.Domain.BattlesList.FindTrainerByDisplayName(System.String)"/> 
            busque correctamente a un entrenador por su nombre de usuario (display name).
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.SetUp">
            <summary>
            Configuración previa a cada prueba unitaria.
            Se asegura de que cada prueba comience con una nueva instancia de la clase <see cref="T:Ucu.Poo.DiscordBot.Domain.Facade"/>.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestAddTrainerToWaitingList">
            <summary>
            Prueba la funcionalidad de agregar un jugador a la lista de espera.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestAddTrainerToWaitingList_Duplicate">
            <summary>
            Prueba la funcionalidad de intentar agregar un jugador duplicado a la lista de espera.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestStartBattle">
            <summary>
            Prueba el inicio de una batalla entre dos jugadores.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestShowPokémonAvailable">
            <summary>
            Prueba la funcionalidad de mostrar los Pokémon disponibles en la Pokédex.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestRemoveTrainerFromWaitingList">
            <summary>
            Prueba la funcionalidad de remover un jugador de la lista de espera.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestTrainerIsWaiting">
            <summary>
            Prueba la funcionalidad de verificar si un jugador está esperando en la lista de espera.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestGetAllTrainersWaiting">
            <summary>
            Prueba la funcionalidad de obtener todos los jugadores esperando en la lista de espera.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestStartBattleNoPlayersWaiting">
            <summary>
            Prueba el comportamiento cuando no hay jugadores esperando en la lista.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestChooseTeam">
            <summary>
            Prueba la funcionalidad de elegir un equipo de Pokémon para un jugador durante una batalla.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestUseItem">
            <summary>
            Prueba la funcionalidad de usar un ítem durante una batalla.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestAttackPokemon">
            <summary>
            Prueba la funcionalidad de realizar un ataque con un Pokémon durante una batalla.
            </summary>
        </member>
        <member name="M:LibraryTests.Domain.FacadeTest.TestChangePokemon">
            <summary>
            Prueba la funcionalidad de cambiar el Pokémon activo durante una batalla.
            </summary>
        </member>
    </members>
</doc>
